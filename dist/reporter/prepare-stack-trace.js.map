{"version":3,"sources":["../../src/reporter/prepare-stack-trace.js"],"names":["readFileSync","require","babelCodeFrame","stackTrace","SourceMapConsumer","module","exports","prepareStackTrace","error","source","map","stack","parse","frame","wrapCallSite","filter","getFileName","match","codeFrame","getErrorSource","name","message","join","topFrame","sourceContentFor","getLineNumber","getColumnNumber","highlightCode","position","getPosition","line","column","getScriptNameOrSourceURL","toString","CallSiteToString","originalPositionFor","fileName","fileLocation","isNative","scriptNameOrSourceURL","isEval","getEvalOrigin","replace","lineNumber","columnNumber","functionName","getFunctionName","addSuffix","isConstructor","methodName","getMethodName","typeName","getTypeName","isMethodCall","isToplevel","indexOf","length"],"mappings":";;AAAA;;;;AAIA,MAAM,EAAEA,YAAF,KAAmBC,QAAS,IAAT,CAAzB;AACA,MAAMC,iBAAiBD,QAAS,kBAAT,CAAvB;AACA,MAAME,aAAaF,QAAS,aAAT,CAAnB;AACA,MAAM,EAAEG,iBAAF,KAAwBH,QAAS,YAAT,CAA9B;;AAEAI,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,MAAlC,EAA0C;AACzD,QAAMC,MAAM,IAAIN,iBAAJ,CAAsBJ,aAAaS,MAAb,EAAsB,MAAtB,CAAtB,CAAZ;AACA,QAAME,QAAQR,WACXS,KADW,CACLJ,KADK,EAEXE,GAFW,CAEPG,SAASC,aAAaJ,GAAb,EAAkBG,KAAlB,CAFF,EAGXE,MAHW,CAIVF,SACE,CAACA,MAAMG,WAAN,EAAD,IACA,CAACH,MAAMG,WAAN,GAAoBC,KAApB,CAA0B,uBAA1B,CANO,CAAd;;AASAT,QAAMU,SAAN,GAAkBC,eAAeT,GAAf,EAAoBC,MAAM,CAAN,CAApB,CAAlB;AACAH,QAAMG,KAAN,GACG,GAAEH,MAAMY,IAAK,KAAIZ,MAAMa,OAAQ,IAAhC,GACAV,MAAMD,GAAN,CAAUG,SAAU,UAASA,KAAM,EAAnC,EAAsCS,IAAtC,CAA4C,IAA5C,CAFF;AAGD,CAfD;;AAiBA,SAASH,cAAT,CAAwBT,GAAxB,EAA6Ba,QAA7B,EAAuC;AACrC,MAAId,SAASC,IAAIc,gBAAJ,CAAqBD,SAASP,WAAT,EAArB,EAA6C,IAA7C,CAAb;AACA,SACEP,UACAP,eACEO,MADF,EAEEc,SAASE,aAAT,EAFF,EAGEF,SAASG,eAAT,EAHF,EAIE;AACEC,mBAAe;AADjB,GAJF,CAFF;AAWD;;AAED,SAASb,YAAT,CAAsBJ,GAAtB,EAA2BG,KAA3B,EAAkC;AAChC,MAAIJ,SAASI,MAAMG,WAAN,EAAb;AACA,MAAI,CAACP,MAAL,EAAa,OAAOI,KAAP;;AAEb,MAAIe,WAAWC,YAAYnB,GAAZ,EAAiBG,KAAjB,CAAf;AACA,MAAI,CAACe,SAASnB,MAAd,EAAsB,OAAOI,KAAP;;AAEtBA,QAAMG,WAAN,GAAoB,MAAMY,SAASnB,MAAnC;AACAI,QAAMY,aAAN,GAAsB,MAAMG,SAASE,IAArC;AACAjB,QAAMa,eAAN,GAAwB,MAAME,SAASG,MAAT,GAAkB,CAAhD;AACAlB,QAAMmB,wBAAN,GAAiC,MAAMJ,SAASnB,MAAhD;AACAI,QAAMoB,QAAN,GAAiBC,gBAAjB;AACA,SAAOrB,KAAP;AACD;;AAED,SAASgB,WAAT,CAAqBnB,GAArB,EAA0BG,KAA1B,EAAiC;AAC/B,MAAIJ,SAASI,MAAMG,WAAN,EAAb;AACA,MAAIc,OAAOjB,MAAMY,aAAN,EAAX;AACA,MAAIM,SAASlB,MAAMa,eAAN,EAAb;AACA,SAAOhB,IAAIyB,mBAAJ,CAAwB,EAAE1B,MAAF,EAAUqB,IAAV,EAAgBC,MAAhB,EAAxB,CAAP;AACD;;AAED;AACA;AACA,SAASG,gBAAT,GAA4B;AAC1B,MAAIE,QAAJ;AACA,MAAIC,eAAgB,EAApB;AACA,MAAI,KAAKC,QAAL,EAAJ,EAAqB;AACnBD,mBAAgB,QAAhB;AACD,GAFD,MAEO;AACLD,eACG,KAAKG,qBAAL,IAA8B,KAAKA,qBAAL,EAA/B,IACA,KAAKvB,WAAL,EAFF;;AAIA,QAAI,CAACoB,QAAD,IAAa,KAAKI,MAAlB,IAA4B,KAAKA,MAAL,EAAhC,EAA+C;AAC7CH,qBAAgB,GAAE,KAAKI,aAAL,EAAqB,IAAvC;AACD;;AAED,QAAIL,QAAJ,EAAc;AACZC,sBAAgBD,SAASM,OAAT,CAAiB,cAAjB,EAAkC,EAAlC,CAAhB;AACD,KAFD,MAEO;AACL;AACA;AACA;AACAL,sBAAiB,aAAjB;AACD;AACD,QAAIM,aAAa,KAAKlB,aAAL,EAAjB;AACA,QAAIkB,cAAc,IAAlB,EAAwB;AACtBN,sBAAiB,IAAGM,UAAW,EAA/B;AACA,UAAIC,eAAe,KAAKlB,eAAL,EAAnB;AACA,UAAIkB,YAAJ,EAAkB;AAChBP,wBAAiB,IAAGO,YAAa,EAAjC;AACD;AACF;AACF;;AAED,MAAId,OAAQ,EAAZ;AACA,MAAIe,eAAe,KAAKC,eAAL,EAAnB;AACA,MAAIC,YAAY,IAAhB;AACA,MAAIC,gBAAgB,KAAKA,aAAL,IAAsB,KAAKA,aAAL,EAA1C;AACA,MAAIC,aAAa,KAAKC,aAAL,EAAjB;AACA,MAAIC,WAAW,KAAKC,WAAL,EAAf;AACA,MAAIC,eACFJ,cAAc,EAAG,KAAKK,UAAL,IAAmB,KAAKA,UAAL,EAApB,IAA0CN,aAA5C,CADhB;AAEA,MAAIK,gBAAgBR,YAApB,EAAkC;AAChC,QAAIA,YAAJ,EAAkB;AAChB,UAAIM,YAAYN,aAAaU,OAAb,CAAqBJ,QAArB,KAAkC,CAAlD,EAAqD;AACnDrB,gBAAS,GAAEqB,QAAS,GAApB;AACD;AACDrB,cAAQe,YAAR;AACA,UACEI,cACAJ,aAAaU,OAAb,CAAsB,GAAD,GAAMN,UAA3B,KACEJ,aAAaW,MAAb,GAAsBP,WAAWO,MAAjC,GAA0C,CAH9C,EAIE;AACA1B,gBAAS,QAAOmB,UAAW,GAA3B;AACD;AACF,KAZD,MAYO;AACLnB,cAAQqB,WAAY,GAAZ,IAAkBF,cAAe,aAAjC,CAAR;AACD;AACF,GAhBD,MAgBO,IAAIE,YAAY,CAACN,YAAjB,EAA+B;AACpCf,YAAQqB,WAAY,GAAZ,IAAkBF,cAAe,aAAjC,CAAR;AACD,GAFM,MAEA,IAAID,aAAJ,EAAmB;AACxBlB,YAAS,MAAD,IAAUe,gBAAiB,aAA3B,CAAR;AACD,GAFM,MAEA,IAAIA,YAAJ,EAAkB;AACvBf,YAAQe,YAAR;AACD,GAFM,MAEA;AACLf,YAAQO,YAAR;AACAU,gBAAY,KAAZ;AACD;AACD,MAAIA,SAAJ,EAAejB,QAAS,KAAIO,YAAa,GAA1B;AACf,SAAOP,IAAP;AACD","file":"prepare-stack-trace.js","sourcesContent":["/* Code borrowed and based on\n * https://github.com/evanw/node-source-map-support/blob/master/source-map-support.js\n */\n\nconst { readFileSync } = require(`fs`)\nconst babelCodeFrame = require(`babel-code-frame`)\nconst stackTrace = require(`stack-trace`)\nconst { SourceMapConsumer } = require(`source-map`)\n\nmodule.exports = function prepareStackTrace(error, source) {\n  const map = new SourceMapConsumer(readFileSync(source, `utf8`))\n  const stack = stackTrace\n    .parse(error)\n    .map(frame => wrapCallSite(map, frame))\n    .filter(\n      frame =>\n        !frame.getFileName() ||\n        !frame.getFileName().match(/^webpack:\\/+webpack\\//)\n    )\n\n  error.codeFrame = getErrorSource(map, stack[0])\n  error.stack =\n    `${error.name}: ${error.message}\\n` +\n    stack.map(frame => `    at ${frame}`).join(`\\n`)\n}\n\nfunction getErrorSource(map, topFrame) {\n  let source = map.sourceContentFor(topFrame.getFileName(), true)\n  return (\n    source &&\n    babelCodeFrame(\n      source,\n      topFrame.getLineNumber(),\n      topFrame.getColumnNumber(),\n      {\n        highlightCode: true,\n      }\n    )\n  )\n}\n\nfunction wrapCallSite(map, frame) {\n  let source = frame.getFileName()\n  if (!source) return frame\n\n  let position = getPosition(map, frame)\n  if (!position.source) return frame\n\n  frame.getFileName = () => position.source\n  frame.getLineNumber = () => position.line\n  frame.getColumnNumber = () => position.column + 1\n  frame.getScriptNameOrSourceURL = () => position.source\n  frame.toString = CallSiteToString\n  return frame\n}\n\nfunction getPosition(map, frame) {\n  let source = frame.getFileName()\n  let line = frame.getLineNumber()\n  let column = frame.getColumnNumber()\n  return map.originalPositionFor({ source, line, column })\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js.\nfunction CallSiteToString() {\n  let fileName\n  let fileLocation = ``\n  if (this.isNative()) {\n    fileLocation = `native`\n  } else {\n    fileName =\n      (this.scriptNameOrSourceURL && this.scriptNameOrSourceURL()) ||\n      this.getFileName()\n\n    if (!fileName && this.isEval && this.isEval()) {\n      fileLocation = `${this.getEvalOrigin()}, `\n    }\n\n    if (fileName) {\n      fileLocation += fileName.replace(/^webpack:\\/+/, ``)\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += `<anonymous>`\n    }\n    let lineNumber = this.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += `:${lineNumber}`\n      let columnNumber = this.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += `:${columnNumber}`\n      }\n    }\n  }\n\n  let line = ``\n  let functionName = this.getFunctionName()\n  let addSuffix = true\n  let isConstructor = this.isConstructor && this.isConstructor()\n  let methodName = this.getMethodName()\n  let typeName = this.getTypeName()\n  let isMethodCall =\n    methodName && !((this.isToplevel && this.isToplevel()) || isConstructor)\n  if (isMethodCall && functionName) {\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += `${typeName}.`\n      }\n      line += functionName\n      if (\n        methodName &&\n        functionName.indexOf(`.` + methodName) !=\n          functionName.length - methodName.length - 1\n      ) {\n        line += ` [as ${methodName}]`\n      }\n    } else {\n      line += typeName + `.` + (methodName || `<anonymous>`)\n    }\n  } else if (typeName && !functionName) {\n    line += typeName + `.` + (methodName || `<anonymous>`)\n  } else if (isConstructor) {\n    line += `new ` + (functionName || `<anonymous>`)\n  } else if (functionName) {\n    line += functionName\n  } else {\n    line += fileLocation\n    addSuffix = false\n  }\n  if (addSuffix) line += ` (${fileLocation})`\n  return line\n}\n"]}