{"version":3,"sources":["../../../src/internal-plugins/query-runner/redirects-writer.js"],"names":["writeRedirects","bootstrapFinished","program","redirects","getState","browserRedirects","filter","r","redirectInBrowser","writeFile","directory","JSON","stringify","exports","oldRedirects","debouncedWriteRedirects","debounce","isEqual","Redirects","on"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA,MAAMA,iBAAiB,YAAY;AACjCC,sBAAoB,IAApB;;AAEA,MAAI,EAAEC,OAAF,EAAWC,SAAX,KAAyB,aAAMC,QAAN,EAA7B;;AAEA;AACA,QAAMC,mBAAmBF,UAAUG,MAAV,CAAiBC,KAAKA,EAAEC,iBAAxB,CAAzB;;AAEA,QAAM,kBAAGC,SAAH,CACJ,oBAASP,QAAQQ,SAAjB,EAA6B,uBAA7B,CADI,EAEJC,KAAKC,SAAL,CAAeP,gBAAf,EAAiC,IAAjC,EAAuC,CAAvC,CAFI,CAAN;AAID,CAZD;;AAcAQ,QAAQb,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,oBAAoB,KAAxB;AACA,IAAIa,YAAJ;AACA,MAAMC,0BAA0B,iBAAEC,QAAF,CAAW,MAAM;AAC/C;AACA,MACEf,qBACA,CAAC,iBAAEgB,OAAF,CAAUH,YAAV,EAAwB,aAAMV,QAAN,GAAiBD,SAAzC,CAFH,EAGE;AACAH;AACAc,mBAAe,aAAMV,QAAN,GAAiBc,SAAhC;AACD;AACF,CAT+B,EAS7B,GAT6B,CAAhC;;AAWA,eAAQC,EAAR,CAAY,iBAAZ,EAA8B,MAAM;AAClCJ;AACD,CAFD","file":"redirects-writer.js","sourcesContent":["import _ from \"lodash\"\nimport fs from \"fs-extra\"\nimport { store, emitter } from \"../../redux/\"\nimport { joinPath } from \"../../utils/path\"\n\nconst writeRedirects = async () => {\n  bootstrapFinished = true\n\n  let { program, redirects } = store.getState()\n\n  // Filter for redirects that are meant for the browser.\n  const browserRedirects = redirects.filter(r => r.redirectInBrowser)\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/redirects.json`),\n    JSON.stringify(browserRedirects, null, 2)\n  )\n}\n\nexports.writeRedirects = writeRedirects\n\nlet bootstrapFinished = false\nlet oldRedirects\nconst debouncedWriteRedirects = _.debounce(() => {\n  // Don't write redirects again until bootstrap has finished.\n  if (\n    bootstrapFinished &&\n    !_.isEqual(oldRedirects, store.getState().redirects)\n  ) {\n    writeRedirects()\n    oldRedirects = store.getState().Redirects\n  }\n}, 250)\n\nemitter.on(`CREATE_REDIRECT`, () => {\n  debouncedWriteRedirects()\n})\n"]}