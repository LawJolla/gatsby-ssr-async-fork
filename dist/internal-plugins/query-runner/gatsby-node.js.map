{"version":3,"sources":["../../../src/internal-plugins/query-runner/gatsby-node.js"],"names":["fs","require","path","joinPath","watchComponent","components","handlePageOrLayout","store","pageOrLayout","jsonDest","getState","program","directory","jsonName","existsSync","writeFile","isLayout","wrapperComponent","component","writeFileSync","componentWrapperPath","componentPath","exports","onCreatePage","page","boundActionCreators","onCreateLayout","layout"],"mappings":";;AAAA,MAAMA,KAAKC,QAAS,IAAT,CAAX;AACA,MAAMC,OAAOD,QAAS,MAAT,CAAb;AACA,MAAM,EAAEE,QAAF,KAAeF,QAAS,kBAAT,CAArB;AACA,MAAM,EAAEG,cAAF,KAAqBH,QAAS,iBAAT,CAA3B;;AAEA,IAAII,aAAa,EAAjB;;AAEA,MAAMC,qBAAqBC,SAASC,gBAAgB;AAClD;AACA,QAAMC,WAAWN,SACfI,MAAMG,QAAN,GAAiBC,OAAjB,CAAyBC,SADV,EAEd,QAFc,EAGd,MAHc,EAIfJ,aAAaK,QAJE,CAAjB;AAMA,MAAI,CAACb,GAAGc,UAAH,CAAcL,QAAd,CAAL,EAA8B;AAC5BT,OAAGe,SAAH,CAAaN,QAAb,EAAwB,IAAxB,EAA6B,MAAM,CAAE,CAArC;AACD;;AAED;AACA;AACA,MAAID,aAAaQ,QAAjB,EAA2B;AACzB,UAAMC,mBAAoB;;2BAEHT,aAAaU,SAAU;sBAC5BT,QAAS;;;GAH3B;AAOAT,OAAGmB,aAAH,CAAiBX,aAAaY,oBAA9B,EAAoDH,gBAApD;AACD;;AAED,QAAMC,YAAYX,MAAMG,QAAN,GAAiBL,UAAjB,CAA4BG,aAAaa,aAAzC,CAAlB;;AAEA,MAAIhB,WAAWa,UAAUG,aAArB,CAAJ,EAAyC;AACvC;AACD;;AAED;AACAjB,iBAAec,UAAUG,aAAzB;AACD,CAjCD;;AAmCAC,QAAQC,YAAR,GAAuB,CAAC,EAAEC,IAAF,EAAQjB,KAAR,EAAekB,mBAAf,EAAD,KAA0C;AAC/DnB,qBAAmBC,KAAnB,EAA0BiB,IAA1B;AACD,CAFD;;AAIAF,QAAQI,cAAR,GAAyB,CAAC,EAAEC,MAAF,EAAUpB,KAAV,EAAiBkB,mBAAjB,EAAD,KAA4C;AACnEnB,qBAAmBC,KAAnB,EAA0BoB,MAA1B;AACD,CAFD","file":"gatsby-node.js","sourcesContent":["const fs = require(`fs`)\nconst path = require(`path`)\nconst { joinPath } = require(`../../utils/path`)\nconst { watchComponent } = require(`./query-watcher`)\n\nlet components = {}\n\nconst handlePageOrLayout = store => pageOrLayout => {\n  // Ensure page/layout component has a JSON file.\n  const jsonDest = joinPath(\n    store.getState().program.directory,\n    `.cache`,\n    `json`,\n    pageOrLayout.jsonName\n  )\n  if (!fs.existsSync(jsonDest)) {\n    fs.writeFile(jsonDest, `{}`, () => {})\n  }\n\n  // Ensure layout component has a wrapper entry component file (which\n  // requires its JSON file so the data + code are one bundle).\n  if (pageOrLayout.isLayout) {\n    const wrapperComponent = `\n  import React from \"react\"\n  import Component from \"${pageOrLayout.component}\"\n  import data from \"${jsonDest}\"\n\n  export default (props) => <Component {...props} {...data} />\n  `\n    fs.writeFileSync(pageOrLayout.componentWrapperPath, wrapperComponent)\n  }\n\n  const component = store.getState().components[pageOrLayout.componentPath]\n\n  if (components[component.componentPath]) {\n    return\n  }\n\n  // Watch the component to detect query changes.\n  watchComponent(component.componentPath)\n}\n\nexports.onCreatePage = ({ page, store, boundActionCreators }) => {\n  handlePageOrLayout(store)(page)\n}\n\nexports.onCreateLayout = ({ layout, store, boundActionCreators }) => {\n  handlePageOrLayout(store)(layout)\n}\n"]}