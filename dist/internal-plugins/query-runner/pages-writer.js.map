{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","fs","store","emitter","getLayoutById","layouts","id","find","l","writePages","bootstrapFinished","program","pages","getState","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","layoutOjb","layoutComponentChunkName","components","json","pageLayouts","forEach","p","push","component","uniq","uniqBy","c","writeFile","directory","JSON","stringify","syncRequires","map","join","j","componentWrapperPath","asyncRequires","exports","oldPages","debouncedWritePages","debounce","isEqual","on"],"mappings":"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","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport { generatePathChunkName } from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\nconst getLayoutById = layouts => id => layouts.find(l => l.id === id)\n\n// Write out pages information.\nconst writePages = async () => {\n  bootstrapFinished = true\n  let { program, pages, layouts } = store.getState()\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => {\n      const layoutOjb = getLayoutById(layouts)(layout)\n      return [\n        ...mem,\n        {\n          componentChunkName,\n          layout,\n          layoutComponentChunkName: layoutOjb && layoutOjb.componentChunkName,\n          jsonName,\n          path,\n          matchPath,\n        },\n      ]\n    },\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let json = []\n  let pageLayouts = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      let layout = getLayoutById(layouts)(p.layout)\n      pageLayouts.push(layout)\n      json.push({\n        jsonName: layout.jsonName,\n      })\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  pageLayouts = _.uniq(pageLayouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/pages.json`),\n    JSON.stringify(pagesData, null, 4)\n  )\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.componentChunkName}\": preferDefault(require(\"${l.componentWrapperPath}\"))`\n    )\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    `${program.directory}/.cache/sync-requires.js`,\n    syncRequires\n  )\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${c.componentChunkName}!${joinPath(\n          c.component\n        )}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"gatsby-module-loader?name=${generatePathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.componentChunkName}\": require(\"gatsby-module-loader?name=${l.componentChunkName}!${l.componentWrapperPath}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  await fs.writeFile(\n    joinPath(program.directory, `.cache/async-requires.js`),\n    asyncRequires\n  )\n\n  return\n}\n\nexports.writePages = writePages\n\nlet bootstrapFinished = false\nlet oldPages\nconst debouncedWritePages = _.debounce(() => {\n  // Don't write pages again until bootstrap has finished.\n  if (bootstrapFinished && !_.isEqual(oldPages, store.getState().pages)) {\n    writePages()\n    oldPages = store.getState().pages\n  }\n}, 250)\n\nemitter.on(`CREATE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}