{"version":3,"sources":["../../src/utils/develop-html.js"],"names":["webpack","require","Promise","fs","webpackConfig","createErrorFromString","debug","module","exports","program","directory","compilerConfig","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","unlinkSync"],"mappings":";;;;;;;;;;;;AACA,IAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,IAAMC,UAAUD,QAAS,UAAT,CAAhB;AACA,IAAME,KAAKF,QAAS,IAAT,CAAX;AACA,IAAMG,gBAAgBH,QAAS,kBAAT,CAAtB;;eACkCA,QAAS,oBAAT,C;IAA1BI,qB,YAAAA,qB;;AACR,IAAMC,QAAQL,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAM,OAAOC,OAAP;AAAA,sFAAiB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,qBADO,GACOD,OADP,CACPC,SADO;;;AAGfJ,kBAAO,wBAAP;;AAEA;AALe;AAAA,mBAMcF,cAC3BK,OAD2B,EAE3BC,SAF2B,EAG1B,cAH0B,EAI3B,IAJ2B,EAK3B,CAAE,GAAF,CAL2B,CANd;;AAAA;AAMTC,0BANS;AAAA,6CAcR,IAAIT,OAAJ,CAAY,UAACU,OAAD,EAAUC,MAAV,EAAqB;AACtCb,sBAAQW,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAClD,oBAAID,CAAJ,EAAO;AACL,yBAAOF,OAAOE,CAAP,CAAP;AACD;AACD,oBAAME,aAAc,GAAEP,SAAU,wBAAhC;AACA,oBAAIM,MAAME,SAAN,EAAJ,EAAuB;AACrB,sBAAIC,gBAAgBH,MAAMI,MAAN,GAAeC,MAAnC;AACA,yBAAOR,OACLR,sBAAsBc,cAAc,CAAd,CAAtB,EAAyC,GAAEF,UAAW,MAAtD,CADK,CAAP;AAGD;;AAED;AACA,oBAAI;AACFd,qBAAGmB,UAAH,CAAcL,UAAd;AACD,iBAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;;AAED,uBAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,eApBD;AAqBD,aAtBM,CAdQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","file":"develop-html.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst Promise = require(`bluebird`)\nconst fs = require(`fs`)\nconst webpackConfig = require(`./webpack.config`)\nconst { createErrorFromString } = require(`../reporter/errors`)\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop-html`,\n    null,\n    [`/`]\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        return reject(\n          createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n        )\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(outputFile)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n\n      return resolve(null, stats)\n    })\n  })\n}\n"]}