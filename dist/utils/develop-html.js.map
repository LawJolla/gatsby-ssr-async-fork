{"version":3,"sources":["../../src/utils/develop-html.js"],"names":["webpack","require","Promise","fs","webpackConfig","createErrorFromString","debug","module","exports","program","directory","compilerConfig","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","unlinkSync"],"mappings":";;AACA,MAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,MAAMC,UAAUD,QAAS,UAAT,CAAhB;AACA,MAAME,KAAKF,QAAS,IAAT,CAAX;AACA,MAAMG,gBAAgBH,QAAS,kBAAT,CAAtB;AACA,MAAM,EAAEI,qBAAF,KAA4BJ,QAAS,oBAAT,CAAlC;AACA,MAAMK,QAAQL,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAM,OAAOC,OAAP,GAAiB,MAAOC,OAAP,IAAwB;AACvC,QAAM,EAAEC,SAAF,KAAgBD,OAAtB;;AAEAH,QAAO,wBAAP;;AAEA;AACA,QAAMK,iBAAiB,MAAMP,cAC3BK,OAD2B,EAE3BC,SAF2B,EAG1B,cAH0B,EAI3B,IAJ2B,EAK3B,CAAE,GAAF,CAL2B,CAA7B;;AAQA,SAAO,IAAIR,OAAJ,CAAY,CAACU,OAAD,EAAUC,MAAV,KAAqB;AACtCb,YAAQW,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClD,UAAID,CAAJ,EAAO;AACL,eAAOF,OAAOE,CAAP,CAAP;AACD;AACD,YAAME,aAAc,GAAEP,SAAU,wBAAhC;AACA,UAAIM,MAAME,SAAN,EAAJ,EAAuB;AACrB,YAAIC,gBAAgBH,MAAMI,MAAN,GAAeC,MAAnC;AACA,eAAOR,OACLR,sBAAsBc,cAAc,CAAd,CAAtB,EAAyC,GAAEF,UAAW,MAAtD,CADK,CAAP;AAGD;;AAED;AACA,UAAI;AACFd,WAAGmB,UAAH,CAAcL,UAAd;AACD,OAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;;AAED,aAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,KApBD;AAqBD,GAtBM,CAAP;AAuBD,CArCD","file":"develop-html.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst Promise = require(`bluebird`)\nconst fs = require(`fs`)\nconst webpackConfig = require(`./webpack.config`)\nconst { createErrorFromString } = require(`../reporter/errors`)\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop-html`,\n    null,\n    [`/`]\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        return reject(\n          createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n        )\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(outputFile)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n\n      return resolve(null, stats)\n    })\n  })\n}\n"]}