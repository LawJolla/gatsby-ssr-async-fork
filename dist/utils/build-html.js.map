{"version":3,"sources":["../../src/utils/build-html.js"],"names":["store","require","createErrorFromString","debug","module","exports","program","directory","pages","getState","map","page","path","compilerConfig","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","unlinkSync"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,MAAM,EAAEA,KAAF,KAAYC,QAAS,UAAT,CAAlB;AACA,MAAM,EAAEC,qBAAF,KAA4BD,QAAS,oBAAT,CAAlC;;AAEA,MAAME,QAAQF,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAG,OAAOC,OAAP,GAAiB,MAAOC,OAAP,IAAwB;AACvC,QAAM,EAAEC,SAAF,KAAgBD,OAAtB;;AAEAH,QAAO,wBAAP;AACA;AACA,QAAMK,QAAQR,MAAMS,QAAN,GAAiBD,KAAjB,CAAuBE,GAAvB,CAA2BC,QAAQA,KAAKC,IAAxC,CAAd;;AAEA;AACA,QAAMC,iBAAiB,MAAM,uBAC3BP,OAD2B,EAE3BC,SAF2B,EAG1B,YAH0B,EAI3B,IAJ2B,EAK3BC,KAL2B,CAA7B;;AAQA,SAAO,uBAAY,CAACM,OAAD,EAAUC,MAAV,KAAqB;AACtC,2BAAQF,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAClD,UAAID,CAAJ,EAAO;AACL,eAAOF,OAAOE,CAAP,CAAP;AACD;AACD,YAAME,aAAc,GAAEZ,SAAU,wBAAhC;AACA,UAAIW,MAAME,SAAN,EAAJ,EAAuB;AACrB,YAAIC,gBAAgBH,MAAMI,MAAN,GAAeC,MAAnC;AACA,eAAOR,OACLb,sBAAsBmB,cAAc,CAAd,CAAtB,EAAyC,GAAEF,UAAW,MAAtD,CADK,CAAP;AAGD;;AAED;AACA,UAAI;AACF,qBAAGK,UAAH,CAAcL,UAAd;AACD,OAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;AACD,aAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,KAnBD;AAoBD,GArBM,CAAP;AAsBD,CAtCD","file":"build-html.js","sourcesContent":["/* @flow */\nimport webpack from \"webpack\"\nimport Promise from \"bluebird\"\nimport fs from \"fs\"\nimport webpackConfig from \"./webpack.config\"\nconst { store } = require(`../redux`)\nconst { createErrorFromString } = require(`../reporter/errors`)\n\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n  // Reduce pages objects to an array of paths.\n  const pages = store.getState().pages.map(page => page.path)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-html`,\n    null,\n    pages\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors\n        return reject(\n          createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n        )\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(outputFile)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n      return resolve(null, stats)\n    })\n  })\n}\n"]}