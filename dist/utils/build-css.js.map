{"version":3,"sources":["../../src/utils/build-css.js"],"names":["module","exports","program","directory","compilerConfig","resolve","reject","run","err","unlinkSync","e","ensureFile"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,MAAOC,OAAP,IAAwB;AACvC,QAAM,EAAEC,SAAF,KAAgBD,OAAtB;;AAEA,QAAME,iBAAiB,MAAM,uBAAcF,OAAd,EAAuBC,SAAvB,EAAmC,WAAnC,CAA7B;;AAEA,SAAO,uBAAY,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACtC,2BAAQF,eAAeC,OAAf,EAAR,EAAkCE,GAAlC,CAAsCC,OAAO;AAC3C,UAAIA,GAAJ,EAAS;AACPF,eAAOE,GAAP;AACD;;AAED;AACA,UAAI;AACF,0BAAGC,UAAH,CAAe,GAAEN,SAAU,2BAA3B;AACD,OAFD,CAEE,OAAOO,CAAP,EAAU,CAEX;AADC;;;AAGF;AACA;AACA,wBAAGC,UAAH,CAAe,GAAER,SAAU,oBAA3B,EAAgDK,OAAO;AACrDH,gBAAQG,GAAR;AACD,OAFD;AAGD,KAjBD;AAkBD,GAnBM,CAAP;AAoBD,CAzBD","file":"build-css.js","sourcesContent":["/* @flow */\nimport webpack from \"webpack\"\nimport fs from \"fs-extra\"\nimport Promise from \"bluebird\"\nimport webpackConfig from \"./webpack.config\"\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  const compilerConfig = await webpackConfig(program, directory, `build-css`)\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run(err => {\n      if (err) {\n        reject(err)\n      }\n\n      // We don't want any javascript produced by this step in the process.\n      try {\n        fs.unlinkSync(`${directory}/public/bundle-for-css.js`)\n      } catch (e) {\n        // ignore.\n      }\n\n      // Ensure there's a styles.css file in public so tools that expect it\n      // can find it.\n      fs.ensureFile(`${directory}/public/styles.css`, err => {\n        resolve(err)\n      })\n    })\n  })\n}\n"]}