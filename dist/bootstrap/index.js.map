{"version":3,"sources":["../../src/bootstrap/index.js"],"names":["Promise","require","glob","_","slash","fs","md5File","crypto","del","apiRunnerNode","testRequireError","graphql","store","emitter","loadPlugins","initCache","report","process","on","reason","p","panic","extractQueries","runQueries","writePages","writeRedirects","preferDefault","m","default","module","exports","program","directory","dispatch","type","payload","activity","activityTimer","start","end","config","err","error","exit","flattenedPlugins","pluginVersions","map","version","hashes","all","resolve","catch","pluginsHash","createHash","update","JSON","stringify","concat","digest","state","getState","oldPluginsHash","status","PLUGINS_HASH","info","stripIndent","remove","e","ensureDirSync","srcDir","__dirname","siteDir","tryRequire","copy","clobber","hasAPIFile","env","plugin","sync","ssrPlugins","filter","options","pluginOptions","browserPlugins","browserAPIRunner","readFileSync","browserPluginsRequires","join","sSRAPIRunner","ssrPluginsRequires","writeFileSync","extensions","apiResults","traceId","flattenDeep","graphqlRunner","query","context","schema","waitForCascadingActions","NODE_ENV","checkJobsDone","debounce","jobs","active","length","log","uptime"],"mappings":"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","file":"index.js","sourcesContent":["/* @flow */\nconst Promise = require(`bluebird`)\n\nconst glob = require(`glob`)\nconst _ = require(`lodash`)\nconst slash = require(`slash`)\nconst fs = require(`fs-extra`)\nconst md5File = require(`md5-file/promise`)\nconst crypto = require(`crypto`)\nconst del = require(`del`)\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst testRequireError = require(`../utils/test-require-error`)\nconst { graphql } = require(`graphql`)\nconst { store, emitter } = require(`../redux`)\nconst loadPlugins = require(`./load-plugins`)\nconst { initCache } = require(`../utils/cache`)\nconst report = require(`../reporter`)\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason, p) => {\n  report.panic(reason)\n})\n\nconst {\n  extractQueries,\n} = require(`../internal-plugins/query-runner/query-watcher`)\nconst {\n  runQueries,\n} = require(`../internal-plugins/query-runner/page-query-runner`)\nconst { writePages } = require(`../internal-plugins/query-runner/pages-writer`)\nconst {\n  writeRedirects,\n} = require(`../internal-plugins/query-runner/redirects-writer`)\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`./log-line-function`)\n\nconst preferDefault = m => (m && m.default) || m\n\nmodule.exports = async (program: any) => {\n  // Fix program directory path for windows env.\n  program.directory = slash(program.directory)\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  // Delete html files from the public directory as we don't want deleted\n  // pages from previous builds to stick around.\n  let activity = report.activityTimer(`delete html files from previous builds`)\n  activity.start()\n  await del([`public/*.html`, `public/**/*.html`])\n  activity.end()\n\n  // Try opening the site's gatsby-config.js file.\n  activity = report.activityTimer(`open and validate gatsby-config.js`)\n  activity.start()\n  let config\n  try {\n    // $FlowFixMe\n    config = preferDefault(require(`${program.directory}/gatsby-config`))\n  } catch (err) {\n    if (!testRequireError(`${program.directory}/gatsby-config`, err)) {\n      report.error(`Could not load gatsby-config`, err)\n      process.exit(1)\n    }\n  }\n\n  store.dispatch({\n    type: `SET_SITE_CONFIG`,\n    payload: config,\n  })\n\n  activity.end()\n\n  const flattenedPlugins = await loadPlugins(config)\n\n  // Check if any plugins have been updated since our last run. If so\n  // we delete the cache is there's likely been changes\n  // since the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  const hashes = await Promise.all([\n    md5File(`package.json`),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-config.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n    Promise.resolve(\n      md5File(`${program.directory}/gatsby-node.js`).catch(() => {})\n    ), // ignore as this file isn't required),\n  ])\n  const pluginsHash = crypto\n    .createHash(`md5`)\n    .update(JSON.stringify(pluginVersions.concat(hashes)))\n    .digest(`hex`)\n  let state = store.getState()\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    report.info(report.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's not any stale\n      data\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash) {\n    try {\n      await fs.remove(`${program.directory}/.cache`)\n    } catch (e) {\n      report.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  initCache()\n\n  // Ensure the public/static directory is created.\n  await fs.ensureDirSync(`${program.directory}/public/static`)\n\n  // Copy our site files to the root of the site.\n  activity = report.activityTimer(`copy gatsby files`)\n  activity.start()\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = `${program.directory}/.cache`\n  const tryRequire = `${__dirname}/../utils/test-require-error.js`\n  try {\n    await fs.copy(srcDir, siteDir, { clobber: true })\n    await fs.copy(tryRequire, `${siteDir}/test-require-error.js`, {\n      clobber: true,\n    })\n    await fs.ensureDirSync(`${program.directory}/.cache/json`)\n    await fs.ensureDirSync(`${program.directory}/.cache/layouts`)\n  } catch (err) {\n    report.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin) =>\n    // TODO make this async...\n    glob.sync(`${plugin.resolve}/gatsby-${env}*`)[0]\n\n  const ssrPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n  const browserPlugins = _.filter(\n    flattenedPlugins.map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    }),\n    plugin => plugin.resolve\n  )\n\n  let browserAPIRunner = ``\n\n  try {\n    browserAPIRunner = fs.readFileSync(\n      `${siteDir}/api-runner-browser.js`,\n      `utf-8`\n    )\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-browser.js`, err)\n  }\n\n  const browserPluginsRequires = browserPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n\n  browserAPIRunner = `var plugins = [${browserPluginsRequires}]\\n${browserAPIRunner}`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    report.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = report.activityTimer(`onPreBootstrap`)\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`)\n  activity.end()\n\n  // Source nodes\n  activity = report.activityTimer(`source and transform nodes`)\n  activity.start()\n  await require(`../utils/source-nodes`)()\n  activity.end()\n\n  // Create Schema.\n  activity = report.activityTimer(`building schema`)\n  activity.start()\n  await require(`../schema`)()\n  activity.end()\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.js`, `.jsx`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const graphqlRunner = (query, context = {}) => {\n    const schema = store.getState().schema\n    return graphql(schema, query, context, context, context)\n  }\n\n  // Collect layouts.\n  activity = report.activityTimer(`createLayouts`)\n  activity.start()\n  await apiRunnerNode(`createLayouts`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createLayouts`,\n    waitForCascadingActions: true,\n  })\n  activity.end()\n\n  // Collect pages.\n  activity = report.activityTimer(`createPages`)\n  activity.start()\n  await apiRunnerNode(`createPages`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPages`,\n    waitForCascadingActions: true,\n  })\n  activity.end()\n\n  // A variant on createPages for plugins that want to\n  // have full control over adding/removing pages. The normal\n  // \"createPages\" API is called every time (during development)\n  // that data changes.\n  activity = report.activityTimer(`createPagesStatefully`)\n  activity.start()\n  await apiRunnerNode(`createPagesStatefully`, {\n    graphql: graphqlRunner,\n    traceId: `initial-createPagesStatefully`,\n    waitForCascadingActions: true,\n  })\n  activity.end()\n  // Extract queries\n  activity = report.activityTimer(`extract queries from components`)\n  activity.start()\n  await extractQueries()\n  activity.end()\n\n  // Start the createPages hot reloader.\n  if (process.env.NODE_ENV !== `production`) {\n    require(`./page-hot-reloader`)(graphqlRunner)\n  }\n\n  // Run queries\n  activity = report.activityTimer(`run graphql queries`)\n  activity.start()\n  await runQueries()\n  activity.end()\n\n  // Write out files.\n  activity = report.activityTimer(`write out page data`)\n  activity.start()\n  await writePages()\n  activity.end()\n\n  // Write out redirects.\n  activity = report.activityTimer(`write out redirect data`)\n  activity.start()\n  await writeRedirects()\n  activity.end()\n\n  // Update Schema for SitePage.\n  activity = report.activityTimer(`update schema`)\n  activity.start()\n  await require(`../schema`)()\n  activity.end()\n\n  const checkJobsDone = _.debounce(resolve => {\n    const state = store.getState()\n    if (state.jobs.active.length === 0) {\n      report.log(``)\n      report.info(`bootstrap finished - ${process.uptime()} s`)\n      report.log(``)\n      resolve({ graphqlRunner })\n    }\n  }, 100)\n\n  if (store.getState().jobs.active.length === 0) {\n    // onPostBootstrap\n    activity = report.activityTimer(`onPostBootstrap`)\n    activity.start()\n    await apiRunnerNode(`onPostBootstrap`)\n    activity.end()\n\n    report.log(``)\n    report.info(`bootstrap finished - ${process.uptime()} s`)\n    report.log(``)\n    return { graphqlRunner }\n  } else {\n    return new Promise(resolve => {\n      // Wait until all side effect jobs are finished.\n      emitter.on(`END_JOB`, () => checkJobsDone(resolve))\n    })\n  }\n}\n"]}